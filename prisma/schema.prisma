generator client {
  provider = "prisma-client-js"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./ERD.md"
  title    = "exchange-watch"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model AlertHistories {
  idx         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userIdx     Int         @map("user_idx")
  alertIdx    String      @map("alert_idx") @db.Uuid
  rate        Decimal     @db.Decimal(20, 8)
  triggeredAt DateTime    @default(now()) @map("triggered_at") @db.Timestamptz(6)
  priceAlerts PriceAlerts @relation(fields: [alertIdx], references: [idx], onDelete: Cascade, onUpdate: NoAction, map: "fk_price_alerts_to_alert_histories")
  users       Users       @relation(fields: [userIdx], references: [idx], onDelete: Cascade, onUpdate: NoAction, map: "fk_users_to_alert_histories")

  @@index([alertIdx], map: "idx_alert_histories_alert")
  @@map("alert_histories")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ExchangeRates {
  idx          Int      @id @default(autoincrement())
  baseCurrency String   @map("base_currency") @db.Char(3)
  currencyCode String   @map("currency_code") @db.Char(3)
  rate         Decimal  @db.Decimal(20, 8)
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@index([currencyCode, baseCurrency, createdAt(sort: Desc)], map: "idx_exchange_rates_latest")
  @@map("exchange_rates")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model News {
  idx          Int       @id @default(autoincrement())
  title        String    @db.VarChar
  content      String
  summary      String
  currencyCode String    @map("currency_code") @db.Char(3)
  sourceUrl    String    @map("source_url")
  publishedAt  DateTime  @map("published_at") @db.Timestamptz(6)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @default(now()) @map("updated_at") @db.Timestamptz(6)
  deletedAt    DateTime? @map("deleted_at") @db.Timestamptz(6)

  @@unique([sourceUrl, deletedAt], map: "news_source_url_unique")
  @@index([currencyCode], map: "idx_news_currency")
  @@index([publishedAt(sort: Desc)], map: "idx_news_published")
  @@map("news")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PriceAlerts {
  idx            String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userIdx        Int              @map("user_idx")
  baseCurrency   String           @map("base_currency") @db.Char(3)
  currencyCode   String           @map("currency_code") @db.Char(3)
  targetPrice    Decimal          @map("target_price") @db.Decimal(20, 8)
  condition      String           @db.VarChar
  isTriggered    Boolean          @default(false) @map("is_triggered")
  isRepeatable   Boolean          @default(false) @map("is_repeatable")
  createdAt      DateTime         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime         @default(now()) @map("updated_at") @db.Timestamptz(6)
  deletedAt      DateTime?        @map("deleted_at") @db.Timestamptz(6)
  alertHistories AlertHistories[]
  users          Users            @relation(fields: [userIdx], references: [idx], onDelete: Cascade, onUpdate: NoAction, map: "fk_users_to_price_alerts")

  @@index([userIdx, currencyCode, baseCurrency], map: "idx_price_alerts_user")
  @@map("price_alerts")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Users {
  idx            Int              @id @default(autoincrement())
  email          String           @db.VarChar(255)
  name           String           @db.VarChar
  password       String?          @db.Char(60)
  socialProvider String           @map("social_provider") @db.VarChar(20)
  socialId       String           @map("social_id") @db.VarChar(100)
  createdAt      DateTime         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime         @default(now()) @map("updated_at") @db.Timestamptz(6)
  deletedAt      DateTime?        @map("deleted_at") @db.Timestamptz(6)
  alertHistories AlertHistories[]
  priceAlerts    PriceAlerts[]
  watchlist      Watchlist[]

  @@unique([email, deletedAt], map: "users_email_unique")
  @@unique([socialProvider, socialId, deletedAt], map: "users_social_unique")
  @@map("users")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Watchlist {
  idx          Int      @id @default(autoincrement())
  userIdx      Int      @map("user_idx")
  currencyCode String   @map("currency_code") @db.Char(3)
  baseCurrency String   @map("base_currency") @db.Char(3)
  displayOrder Int      @map("display_order")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)
  users        Users    @relation(fields: [userIdx], references: [idx], onDelete: Cascade, onUpdate: NoAction, map: "fk_users_to_watchlist")

  @@unique([userIdx, currencyCode, baseCurrency], map: "watchlist_unique_currency")
  @@index([userIdx, displayOrder], map: "idx_watchlist_user")
  @@map("watchlist")
}

model ExchangeRatesDaily {
  idx          Int      @id @default(autoincrement())
  baseCurrency String   @map("base_currency") @db.Char(3)
  currencyCode String   @map("currency_code") @db.Char(3)
  openRate     Decimal  @map("open_rate") @db.Decimal(20, 8)
  highRate     Decimal  @map("high_rate") @db.Decimal(20, 8)
  lowRate      Decimal  @map("low_rate") @db.Decimal(20, 8)
  closeRate    Decimal  @map("close_rate") @db.Decimal(20, 8)
  avgRate      Decimal  @map("avg_rate") @db.Decimal(20, 8)
  rateCount    Int      @map("rate_count")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@unique([currencyCode, baseCurrency], map: "exchange_rates_daily_unique")
  @@index([currencyCode, baseCurrency], map: "idx_exchange_rates_lookup")
  @@map("exchange_rates_daily")
}
